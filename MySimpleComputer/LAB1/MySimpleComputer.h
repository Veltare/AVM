#include <stdio.h>
#include <iostream>
#include <fstream>

#ifndef H_MySimpleComputer
 #define H_MySimpleComputer



using namespace std;

//Флаги
#define P 1
#define O 2
#define M 3
#define T 4
#define E 5
//Команды
#define READ 10
#define WRITE 11
#define LOAD 20
#define STORE 21
#define ADD 30
#define SUB 31
#define DIVIDE 32
#define MUL 33
#define JUMP 40
#define JNEG 41
#define JZ 42
#define HALT 43
#define RCCR 70


#define SIZE 100
int reg;
int MemoryArray[SIZE];
//Функции статической библеотеки
 
int sc_memoryInit();/*– инициализирует оперативную память Simple Computer, за-
давая всем еѐ ячейкам нулевые значения. В качестве «оперативной памяти» использу-
ется массив целых чисел, определенный статически в рамках библиотеки. Размер мас-
сива равен 100 элементам.*/
int sc_memorySet( int ,int);/*задает значение указанной
ячейки памяти как value. Если адрес выходит за допустимые границы, то устанавлива-
ется флаг «выход за границы памяти» и работа функции прекращается с ошибкой;*/
int sc_memoryGet(int,int*);/*возвращает значение указан-
ной ячейки памяти в value. Если адрес выходит за допустимые границы, то устанавли-
вается флаг «выход за границы памяти» и работа функции прекращается с ошибкой.
Значение value в этом случае не изменяется.*/
int sc_memorySave(char* s);/* сохраняет содержимое памяти в файл в
бинарном виде (используя функцию write или fwrite);*/
int sc_memoryLoad(char* s);/*– загружает из указанного файла содер-
жимое оперативной памяти (используя функцию read или fread);*/
int sc_regInit(void);/*– инициализирует регистр флагов нулевым значением;*/
int sc_regSet(int,int);/*устанавливает значение указанно-
го регистра флагов. Для номеров регистров флагов должны использоваться маски, за-
даваемые макросами (#define). Если указан недопустимый номер регистра или некор-
ректное значение, то функция завершается с ошибкой.*/
int sc_regGet(int Flags,int *value);/*возвращает значение указанного
флага. Если указан недопустимый номер регистра, то функция завершается с ошибкой*/
int sc_commandEncode(int,int,int*);/*кодирует команду с указанным номером и операндом и помещает результат в value. Если ука-
заны неправильные значения для команды или операнда, то функция завершается с
ошибкой. В этом случае значение value не изменяется.*/
int sc_commandDecode(int,int*,int*);/*декодирует значение как команду Simple Computer. Если декодирование невозможно, то
устанавливается флаг «ошибочная команда» и функция завершается с ошибкой.*/
	
void Print();

#endif
